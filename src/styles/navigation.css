/*******************************
    Field pagination styles. 
*******************************/

:root {
    --navbar-background-color: rgb(24, 24, 24);
    --navbar-background-active-color: rgba(40, 40, 40);
    --navbar-text-color: rgb(230,230,230);
    --navbar-separation-color: rgb(48,48,48);
    --navbar-search-button-color: rgb(200, 200, 200);
    --navbar-search-button-active-color: var(--navbar-background-active-color);
    --navbar-disabled-button-color: rgb(128, 128, 128);

    
}


/** Navigation bar and its flow placeholder **/
div.ui.menu.navigation-bar {
    /* Fix navbar to always take the full top of the screen */
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;

    /* Additional styles */
    margin-top: 0;
    border-radius: 0;
}

div.navigation-bar-placeholder:not(.is-stacked),
div.ui.menu.navigation-bar:not(.is-stacked) {
    min-height: 52px;   /* Same for when with & without secondary menu;
                           If stacked, navbar height is calculated automatically on whether it's stack, and placeholder's height is updated in component to match it
                        */
    width: 100%;        /* Required for placeholder to properly calculate `isStacked` state */
}

div.navigation-bar-placeholder.is-stacked {
    width: 100%;
}


/** Fullscreen navigation bar and its children width **/
div.ui.menu.navigation-bar:not(.is-stacked) {
    display: flex;
}

div.ui.menu.navigation-bar:not(.is-stacked) > .navbar-search-container {
    /* Allow width change for search container */
    flex: 1 1 300px;
    max-width: 300px;
}

div.ui.menu.navigation-bar:not(.is-stacked) > *:not(.navbar-search-container) {
    /* Disable width change for other navbar items */
    flex: 0 0 auto;
}


/** Background & text colors and borders **/
div.ui.menu.navigation-bar,
.ui.menu .ui.dropdown .menu.navbar-submenu-dropdown > a.item {
    /* Background color */
    background-color: var(--navbar-background-color) !important;
}

div.ui.menu.navigation-bar > .item.active:not(.dropdown),   /* Active menu items */
/* Menu item hovering (except for expand/collapse button, submenu in stacked mode and right side) */
div.ui.menu.navigation-bar > .item:hover:not(.navigation-bar-expand-container):not(.navbar-submenu-container.is-expanded):not(.right),

.navbar-submenu > .item:hover,      /* Stacked submenu item hovering */
.navbar-submenu > .item.active,     /* Stacked submenu, active item */

.ui.menu .ui.dropdown .menu.navbar-submenu-dropdown > a.item:hover, /* Dropdown submenu hovering */
.ui.menu .ui.dropdown .menu.navbar-submenu-dropdown > a.item.active {   /* Dropdown submenu, active item */
    /* Background color for active & hovered elements */
    background-color: var(--navbar-background-active-color) !important;
}

div.ui.menu.navigation-bar .item,
div.ui.menu.navigation-bar .item:hover,
.ui.menu .ui.dropdown .menu.navbar-submenu-dropdown > a.item,
.navigation-bar-username {
    /* Text color */
    color: var(--navbar-text-color) !important;
    text-decoration-color: var(--navbar-text-color) !important;
}

.ui.dropdown .menu.navbar-submenu-dropdown {
    /* Remove borders between dropdown and navbar */
    border: 0px;
}


/** Top-level items **/
div.ui.menu.navigation-bar > .item {
    display: flex;
    justify-content: center;
    border-radius: 0;
}

div.ui.menu.navigation-bar > .item:before {
    /* Set separation color for navbar & submenu dropdown items  */
    background: var(--navbar-separation-color);
}


/** Submenu dropdown (fullscreen) **/
.ui.dropdown .menu.navbar-submenu-dropdown > a,
.ui.dropdown .menu.navbar-submenu-dropdown > a:first-child {
    /* Submenu dropdown item separation */
    border: solid 1px var(--navbar-separation-color);
}

.ui.dropdown .menu.navbar-submenu-dropdown > a .ui.label {
    /* Space between text and label */
    margin-left: 0.5rem;
    margin-right: 0;
}

/** Submenu menu (stacked) **/
.navbar-submenu-container {
    flex-flow: column;
}

.navbar-submenu-header {
    cursor: pointer;
    
    /* Positioning */
    width: 100%;
    display: flex;
    justify-content: center;
}

.navbar-submenu-container > .menu.navbar-submenu > a.item {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.navbar-menu-label-offset {
    width: 20px;
    margin-right: 1em;
}

/** Menu expand toggle **/
div.ui.menu.navigation-bar > div.item.navigation-bar-expand-container {
    justify-content: end;
}

i.navigation-bar-expand-toggle:hover {
    cursor: pointer;
}


/** Search input & button **/
.navbar-search-container {
    display: flex;
    /* column-gap: 0.5rem; */

    /* Enable shrinking below default value */
    min-width: 0;
}

.navbar-search-container:not(.is-stacked) > .ui.input {
    /* Enable shrinking below default value */
    flex: 1 1 auto;
    min-width: 0 !important;
}

.navbar-search-container > .ui.input > input {
    /* Input styling */
    border-radius: 0px;
}

.navbar-search-container > button.ui.button.field-menu-button {
    border: solid 1px var(--navbar-search-button-color) !important;

    /* Set button height & width equal to input with "mini" prop */
    width: 30px;
    height: 30px;

    /* Align icon inside button */
    padding: 0 !important;
}

.navbar-search-container > button.ui.button.field-menu-button > i {
    color: var(--navbar-search-button-color);
}

.navbar-search-container > button.ui.button.field-menu-button:active,
.navbar-search-container > button.ui.button.field-menu-button:focus,
.navbar-search-container > button.ui.button.field-menu-button:hover {
    background-color: var(--navbar-search-button-active-color) !important;
}


/** Right menu **/
.ui.menu:not(.vertical) .right.menu.navigation-right-menu {
    /* Remove separation between search input and right menu */
    margin-left: 0 !important;
}

.navigation-right-menu:not(.is-stacked) > .nagivation-bar-button-container {
    /* Left border */
    border-left: solid 1px var(--navbar-separation-color);
}

div.ui.menu.navigation-bar div.nagivation-bar-button-container {
    display: flex;
    justify-content: center;
    align-items: center;
    padding-left: 0.5em;
    padding-right: 0.5em;
}

div.navigation-right-menu.is-stacked {
    border-top: solid 1px var(--navbar-separation-color);
}

div.ui.menu.navigation-bar .item > button.navigation-bar-button {    /* override SUIR styling */
    margin-left: 0.5em;
    margin-right: 0.5em;
    width: 105px;

    border-radius: 0;
}

div.ui.menu.navigation-bar .item > button.navigation-bar-button.is-disabled,    /* Disabled button */
div.ui.menu.navigation-bar .item > button.navigation-bar-button.is-disabled:hover {
    background-color: grey;     /* Overrides button color set in the component code; also set for :hover pseudoclass to disable color change on hover */
    cursor: default;
    opacity: 0.45;  /* SUIR opacity for disabled buttons */
}


/** Right menu user page link **/
a.navigation-bar-username {
    text-decoration: underline;
    font-weight: bold;
    margin-left: 0.5em;
    margin-right: 0.5em;

    /* Max width and long text display */
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
}