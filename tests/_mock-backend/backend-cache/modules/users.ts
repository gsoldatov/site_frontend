import type { User } from "../../../_mock-data/modules/users";


/**
 * Stores custom values for users generated by backend.
 */
export class UsersCache {
    private cache: Record<number, Partial<User>>

    constructor() {
        this.cache = {};
    }

    /**
     * Returns custom values stored for the specified `user_id` or an empty object
     */
    get(user_id: number): Partial<User> {
        return this.cache[user_id] || {};
    }

    /**
     * Adds or updates user custom values for the specified `user_id`.
     * 
     * `user_id` is always added to the attributes of the user.
     */
    update(user_id: number, user: Partial<User>): void {
        if (user_id === undefined) throw Error("user_id is required.");
        
        if (!(user_id in this.cache)) this.cache[user_id] = {};
        this.cache[user_id] = { ...this.cache[user_id], ...user, user_id };
    }

    /**
     * Replaces user custom value for the specified `user_id`.
     * 
     * `user_id` is always added to the attributes of the user.
     */
    replace(user_id: number, user: Partial<User>) {
        if (user_id === undefined) throw Error("user_id is required.");
        this.cache[user_id] = { ...user, user_id };
    }
}
